# -*- coding: utf-8 -*-
"""Copy of Python Challenge Guessing Game.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cCKsnMAvOprvSNf6cJjOLjFou7uclKnL

#### First, Build a Line of Code that can Return arandom integer from 1 to 100 and store this number in object called Actual

# Guessing Game Challenge

Let's use `while` loops to create a guessing game.

The Challenge:

Write a program that picks a random integer from 1 to 100, and has players guess the number. The rules are:

1. If a player's guess is less than 1 or greater than 100, say "OUT OF BOUNDS"

2. On all turns, if a guess is 
 * closer to the number than the previous guess return "Closer!"
 * farther from the number than the previous guess, return "Farther!"
3. When the player's guess equals the number, tell them they've guessed correctly *and* how many guesses it took!

Now Lets o fro the Steps!
"""

#Type Your Code Here  - Replace None with Correct  Function
from random import randint  
Actual = randint(1,100)

"""#### Next, build a Code to display an introduction to the Game to tell the user the Boundaries from 1 to 100 and what is his target."""

print("enter a number between 0 and 100")



"""### Next, Build a Code that takes an integer input from the user """

#Type Your Code Here - Replace None With Correct Function 
Guess= int(input('enter the number'))

"""### Next, Put the Upper Cell in A Loop that keeps checking if the Number is Out of Bounds or Not  """

#Replace None Values with correct conditions or Booleans
while(Guess < 1 or Guess > 100):
  print("enter a number between 1 and 100")
  Guess=int(input('enter the number'))

   


  #and if not print another thing

"""### Next, Build a Code that Check if the Guess is equal to the Actual Random Number"""

guesses= []#Make it an Empty List 
#Change None to Correct Boolean between
if  Actual==Guess :
  print ('Wow, you\'ve guessed Correctly this time') #Fix 
  'You have guessed it in {} times'.format(len(guesses)+1) # Put function that calculate the Real Number of Guesses

"""### Next, Build a Code that Check on Each Guess whether its closer than the Previous Guess or not."""

while(Guess!=Actual):
  guesses.append(Guess)
  if  abs(guesses[len(guesses)-2]-Actual)> abs(guesses[len(guesses)-1]-Actual):
    print(' you are closer to target ')
  else:
    print(' you are far from the target ')
  Guess=int(input('enter again'))

"""#### Write a `while` loop that compares the player's guess to our number. If the player guesses correctly, break from the loop. Otherwise, tell the player if they're Closer or Farer , and continue asking for guesses.

**Try to Collect All the cells you 've made above and use it here**

Hint:


* you can use the `abs()` function to find the positive difference between two numbers


# Decomposition 

*   Choosing Random Number
*   Game Intro for the User
*   Checking on the Inserted Guess if its in boundary or not
*   Checking on the Inserted Guess if its equal to the Random Number or Not
*   Checking on the Inserted Guess if its Far or Close from the Previous Guess.




"""

# Type your Final Code here
play=1
while play==1:
 from random import randint  
 Actual = randint(1,100)
 print(Actual)
 print("enter a number between 0 and 100")
 Guess= int(input('enter the number'))
 while(Guess < 1 or Guess > 100):
  print("out of bounds")
  Guess=int(input('enter the number'))
  
  
 guesses= []#Make it an Empty List 
#Change None to Correct Boolean between
 if  Actual==Guess :
  print ('Wow, you\'ve guessed Correctly this time') #Fix 
  print('You have guessed it in {} times'.format(len(guesses)+1)) # Put function that calculate the R
 while(Guess!=Actual):
  guesses.append(Guess)
  if(len(guesses)>1):
    if  abs(guesses[len(guesses)-2]-Actual)> abs(guesses[len(guesses)-1]-Actual):
      print(' you are closer to target ')
    else:
      print(' you are far from the target ')
  Guess=int(input('enter again'))
  if  Actual==Guess:
      print('Wow, you\'ve guessed Correctly this time') #Fix 
      print('You have guessed it in {} times'.format((len(guesses)+1)))
 print('do you wanna play again yes or no')
 if(input()=='yes'):
  play=1
 else:
  play=0

# Type here the Big Loop
while None :
  continue

"""That's it! You've just programmed your first game!

In the next section we'll learn how to turn some of these repetitive actions into *functions* that can be called whenever we need them.

### Good Job!
"""